{"ast":null,"code":"var _s = $RefreshSig$();\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage\nimport data from './data';\nimport { useDispatch, useSelector } from 'react-redux';\nconst rootReducer = combineReducers({\n  data\n});\nconst persistedReducer = persistReducer({\n  key: 'root',\n  storage,\n  whitelist: ['data']\n}, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\nexport const useAppSelector = useSelector;\nexport const persistor = persistStore(store);","map":{"version":3,"names":["combineReducers","configureStore","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","data","useDispatch","useSelector","rootReducer","persistedReducer","key","whitelist","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","useAppDispatch","_s","useAppSelector","persistor"],"sources":["/home/jmj/pj2024/myportfolio-app/src/store/reducers/store.ts"],"sourcesContent":["import { ThunkDispatch, UnknownAction, combineReducers, configureStore } from '@reduxjs/toolkit'\r\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage\r\nimport data from './data'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    data\r\n})\r\n\r\nconst persistedReducer = persistReducer(\r\n    {\r\n        key: 'root',\r\n        storage,\r\n        whitelist: ['data']\r\n    },\r\n    rootReducer\r\n)\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n            }\r\n        })\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = ThunkDispatch<RootState, any, UnknownAction>\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport const persistor = persistStore(store)\r\n"],"mappings":";AAAA,SAAuCA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAChG,SAASC,YAAY,EAAEC,cAAc,EAAEC,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAC/G,OAAOC,OAAO,MAAM,2BAA2B,EAAC;AAChD,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAA+BC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAE5E,MAAMC,WAAW,GAAGd,eAAe,CAAC;EAChCW;AACJ,CAAC,CAAC;AAEF,MAAMI,gBAAgB,GAAGZ,cAAc,CACnC;EACIa,GAAG,EAAE,MAAM;EACXN,OAAO;EACPO,SAAS,EAAE,CAAC,MAAM;AACtB,CAAC,EACDH,WACJ,CAAC;AAED,OAAO,MAAMI,KAAK,GAAGjB,cAAc,CAAC;EAChCkB,OAAO,EAAEJ,gBAAgB;EACzBK,UAAU,EAAGC,oBAAoB,IAC7BA,oBAAoB,CAAC;IACjBC,iBAAiB,EAAE;MACfC,cAAc,EAAE,CAACnB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACtE;EACJ,CAAC;AACT,CAAC,CAAC;AAKF,OAAO,MAAMe,cAAc,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMb,WAAW,CAAc,CAAC;AAAA;AAAAa,EAAA,CAAjDD,cAAc;EAAA,QAASZ,WAAW;AAAA;AAC/C,OAAO,MAAMc,cAA+C,GAAGb,WAAW;AAE1E,OAAO,MAAMc,SAAS,GAAGzB,YAAY,CAACgB,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}