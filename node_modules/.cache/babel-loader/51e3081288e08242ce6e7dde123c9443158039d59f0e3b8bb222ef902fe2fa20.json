{"ast":null,"code":"// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nconst isLocalhost=Boolean(window.location.hostname==='localhost'||window.location.hostname==='[::1]'||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));export const register=config=>{if(process.env.NODE_ENV==='production'&&'serviceWorker'in navigator){const publicUrl=new URL(process.env.PUBLIC_URL,window.location.href);if(publicUrl.origin!==window.location.origin){return;}window.addEventListener('load',()=>{const swUrl=`${process.env.PUBLIC_URL}/service-worker.js`;if(isLocalhost){checkValidServiceWorker(swUrl,config);navigator.serviceWorker.ready.then(()=>{console.log('This web app is being served cache-first by a service '+'worker. To learn more, visit https://bit.ly/CRA-PWA');});}else{registerValidSW(swUrl,config);}});}};function registerValidSW(swUrl,config){navigator.serviceWorker.register(swUrl).then(registration=>{registration.onupdatefound=()=>{const installingWorker=registration.installing;if(installingWorker==null){return;}installingWorker.onstatechange=()=>{if(installingWorker.state==='installed'){if(navigator.serviceWorker.controller){console.log('New content is available and will be used when all '+'tabs for this page are closed. See https://bit.ly/CRA-PWA.');if(config&&config.onUpdate){config.onUpdate(registration);}}else{console.log('Content is cached for offline use.');if(config&&config.onSuccess){config.onSuccess(registration);}}}};};}).catch(error=>{console.error('Error during service worker registration:',error);});}function checkValidServiceWorker(swUrl,config){fetch(swUrl,{headers:{'Service-Worker':'script'}}).then(response=>{const contentType=response.headers.get('content-type');if(response.status===404||contentType!=null&&contentType.indexOf('javascript')===-1){navigator.serviceWorker.ready.then(registration=>{registration.unregister().then(()=>{window.location.reload();});});}else{registerValidSW(swUrl,config);}}).catch(()=>{console.log('No internet connection found. App is running in offline mode.');});}export const unregister=()=>{if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(registration=>{registration.unregister();}).catch(error=>{console.error(error.message);});}};","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","process","env","NODE_ENV","navigator","publicUrl","URL","PUBLIC_URL","href","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","then","console","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","message"],"sources":["/home/jmj/pj2024/myportfolio-app/src/serviceWorker.ts"],"sourcesContent":["// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        window.location.hostname === '[::1]' ||\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport const register = (config?: Config): void => {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n            if (isLocalhost) {\r\n                checkValidServiceWorker(swUrl, config)\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA')\r\n                })\r\n            } else {\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.')\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            console.log('Content is cached for offline use.')\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error)\r\n        })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' }\r\n    })\r\n        .then((response) => {\r\n            const contentType = response.headers.get('content-type')\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.')\r\n        })\r\n}\r\n\r\nexport const unregister = (): void => {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister()\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}