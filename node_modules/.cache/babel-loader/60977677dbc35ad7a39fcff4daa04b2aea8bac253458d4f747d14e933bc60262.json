{"ast":null,"code":"var _jsxFileName = \"/home/jmj/pj2024/myportfolio-app/src/components/Header/Header.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport HamburgerMenuButton from '../HamburgerMenuButton/HamburgerMenuButton';\nimport SideNavBar from '../SideNavBar/SideNavBar';\nimport './_header.sass'; // Import the SASS file for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [isNavOpen, setIsNavOpen] = useState(false);\n  const handleNavOpen = () => {\n    setIsNavOpen(true);\n  };\n  const handleNavClose = () => {\n    setIsNavOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(HamburgerMenuButton, {\n        onClick: handleNavOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo192.png\",\n        alt: \"Logo\",\n        className: \"spinning-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBar, {\n      isOpen: isNavOpen,\n      onClose: handleNavClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Header, \"MNgkhjFJ3DQLGhlcYzaIsl5YrwQ=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","HamburgerMenuButton","SideNavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","isNavOpen","setIsNavOpen","handleNavOpen","handleNavClose","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","isOpen","onClose","_c","$RefreshReg$"],"sources":["/home/jmj/pj2024/myportfolio-app/src/components/Header/Header.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport HamburgerMenuButton from '../HamburgerMenuButton/HamburgerMenuButton';\nimport SideNavBar from '../SideNavBar/SideNavBar';\nimport './_header.sass'; // Import the SASS file for styling\n\nconst Header: React.FC = () => {\n    const [isNavOpen, setIsNavOpen] = useState(false);\n\n    const handleNavOpen = () => {\n        setIsNavOpen(true);\n    };\n\n    const handleNavClose = () => {\n        setIsNavOpen(false);\n    };\n\n    return (\n        <>\n            <header className=\"header\">\n                <HamburgerMenuButton onClick={handleNavOpen} />\n                <img src=\"/logo192.png\" alt=\"Logo\" className=\"spinning-logo\" />\n            </header>\n            <SideNavBar isOpen={isNavOpen} onClose={handleNavClose} />\n        </>\n    );\n};\n\nexport default Header;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,mBAAmB,MAAM,4CAA4C;AAC5E,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,aAAa,GAAGA,CAAA,KAAM;IACxBD,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IACzBF,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACIN,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACIT,OAAA;MAAQU,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACtBT,OAAA,CAACH,mBAAmB;QAACc,OAAO,EAAEJ;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/Cf,OAAA;QAAKgB,GAAG,EAAC,cAAc;QAACC,GAAG,EAAC,MAAM;QAACP,SAAS,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eACTf,OAAA,CAACF,UAAU;MAACoB,MAAM,EAAEb,SAAU;MAACc,OAAO,EAAEX;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC5D,CAAC;AAEX,CAAC;AAACX,EAAA,CApBID,MAAgB;AAAAiB,EAAA,GAAhBjB,MAAgB;AAsBtB,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}