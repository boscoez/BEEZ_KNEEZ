{"ast":null,"code":"import{combineReducers,configureStore}from'@reduxjs/toolkit';import{persistStore,persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from'redux-persist';import storage from'redux-persist/lib/storage';// defaults to localStorage\nimport data from'./data';import{useDispatch,useSelector}from'react-redux';const rootReducer=combineReducers({data});const persistedReducer=persistReducer({key:'root',storage,whitelist:['data']},rootReducer);export const store=configureStore({reducer:persistedReducer,middleware:getDefaultMiddleware=>getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}})});export const useAppDispatch=()=>useDispatch();export const useAppSelector=useSelector;export const persistor=persistStore(store);","map":{"version":3,"names":["combineReducers","configureStore","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","data","useDispatch","useSelector","rootReducer","persistedReducer","key","whitelist","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","useAppDispatch","useAppSelector","persistor"],"sources":["/home/jmj/pj2024/myportfolio-app/src/store/reducers/store.ts"],"sourcesContent":["import { ThunkDispatch, UnknownAction, combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage\r\nimport data from './data';\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    data\r\n});\r\n\r\nconst persistedReducer = persistReducer(\r\n    {\r\n        key: 'root',\r\n        storage,\r\n        whitelist: ['data']\r\n    },\r\n    rootReducer\r\n);\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n            }\r\n        })\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = ThunkDispatch<RootState, undefined, UnknownAction>;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport const persistor = persistStore(store);"],"mappings":"AAAA,OAAuCA,eAAe,CAAEC,cAAc,KAAQ,kBAAkB,CAChG,OAASC,YAAY,CAAEC,cAAc,CAAEC,KAAK,CAAEC,SAAS,CAAEC,KAAK,CAAEC,OAAO,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,eAAe,CAC/G,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAAE;AACjD,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,OAA+BC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAE5E,KAAM,CAAAC,WAAW,CAAGd,eAAe,CAAC,CAChCW,IACJ,CAAC,CAAC,CAEF,KAAM,CAAAI,gBAAgB,CAAGZ,cAAc,CACnC,CACIa,GAAG,CAAE,MAAM,CACXN,OAAO,CACPO,SAAS,CAAE,CAAC,MAAM,CACtB,CAAC,CACDH,WACJ,CAAC,CAED,MAAO,MAAM,CAAAI,KAAK,CAAGjB,cAAc,CAAC,CAChCkB,OAAO,CAAEJ,gBAAgB,CACzBK,UAAU,CAAGC,oBAAoB,EAC7BA,oBAAoB,CAAC,CACjBC,iBAAiB,CAAE,CACfC,cAAc,CAAE,CAACnB,KAAK,CAAEC,SAAS,CAAEC,KAAK,CAAEC,OAAO,CAAEC,KAAK,CAAEC,QAAQ,CACtE,CACJ,CAAC,CACT,CAAC,CAAC,CAKF,MAAO,MAAM,CAAAe,cAAc,CAAGA,CAAA,GAAMZ,WAAW,CAAc,CAAC,CAC9D,MAAO,MAAM,CAAAa,cAA+C,CAAGZ,WAAW,CAE1E,MAAO,MAAM,CAAAa,SAAS,CAAGxB,YAAY,CAACgB,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}